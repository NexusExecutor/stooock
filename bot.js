import { Telegraf } from 'telegraf';
import fetch from 'node-fetch';

const BOT_TOKEN = '7274912084:AAHXj4eIsT3v66MgaZz8NhKHG-7uu0P3axQ';
const GROUP_ID = -1002551206809;
const RESTOCK_URL = 'https://gagapii.onrender.com/api/stock/restock-time';
const STOCK_URL = 'https://gagapii.onrender.com/api/stock/GetStock';

const bot = new Telegraf(BOT_TOKEN);
const lastRestockTimestamps = {};

const categories = {
  seeds: 'üå± –°–µ–º–µ–Ω–∞',
  gear: '‚öôÔ∏è –ì–∏—Ä—ã',
  egg: 'ü•ö –Ø–π—Ü–∞',
  cosmetic: 'üíÑ –ö–æ—Å–º–µ—Ç–∏–∫–∞'
};

function formatList(title, items) {
  if (!items?.length) return `‚Ä¢ ${title}: <i>–ø—É—Å—Ç–æ</i>`;
  return `‚Ä¢ ${title}:\n` + items.map(item => `  ‚Äî ${item.name}${item.value ? ` (${item.value})` : ''}`).join('\n');
}

async function checkRestocks() {
  try {
    const res = await fetch(RESTOCK_URL);
    const data = await res.json();

    const updated = [];

    for (const key in categories) {
      const current = data[key]?.timestamp;
      if (current && lastRestockTimestamps[key] !== current) {
        updated.push(key);
        lastRestockTimestamps[key] = current;
      }
    }

    if (updated.length === 0) return;

    const stockRes = await fetch(STOCK_URL);
    const stockData = await stockRes.json();

    const message =
      `<b>üì¶ –û–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π —Å—Ç–æ–∫:</b>\n\n` +
      updated.map(key => {
        const title = categories[key];
        const items =
          key === 'seeds' ? stockData.seedsStock :
          key === 'gear' ? stockData.gearStock :
          key === 'egg' ? stockData.eggStock :
          key === 'cosmetic' ? stockData.cosmeticsStock : [];

        return formatList(title, items);
      }).join('\n\n');

    await bot.telegram.sendMessage(GROUP_ID, message, { parse_mode: 'HTML' });
    console.log('[‚úÖ] –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:', updated.join(', '));
  } catch (err) {
    console.error('[‚ùå] –û—à–∏–±–∫–∞:', err.message);
  }
}

setInterval(checkRestocks, 60 * 1000); // –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
bot.launch();
console.log('ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª–µ–¥–∏—Ç –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏...');
